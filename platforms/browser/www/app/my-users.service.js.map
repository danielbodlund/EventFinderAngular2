{"version":3,"file":"my-users.service.js","sourceRoot":"","sources":["../src/app/my-users.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, Inject} from '@angular/core';\nimport {AngularFire, FirebaseRef} from 'angularfire2/angularfire2'\n\n@Injectable()\nexport class MyUsersService {\n\n  constructor(public _af : AngularFire, @Inject(FirebaseRef) public _ref: any) {}\n  \n  get usersOnce() {\n    return new Promise(resolve => {\n      this._ref.child('/users').once('value', (snapshot) => {\n        resolve(snapshot.val());\n      });\n    });\n  }\n  \n  createAccount(email: string, password: string){    \n    return new Promise(resolve => {        \n      this._ref.createUser({\n      email: email,\n      password: password\n      }, \n      (error, userData) => {\n        let result = {\"error\": error, \"userData\": userData}\n        resolve(result);\n      });\n    });         \n  }\n  \n  loginUserWithPassword(email: string, password: string){\n    return new Promise(resolve => {\n      this._ref.authWithPassword({\n      email: email,\n      password: password\n      }, \n      (error, userData) => {\n        let result = {\"error\": error, \"userData\": userData}\n        resolve(result);\n      });\n    });\n  }\n  \n  resetPassword(email: string){\n    return new Promise(resolve => {\n      this._ref.child('/users').resetPassword({email: email}, error => {\n        resolve(error);\n      });\n    });\n  }\n  \n  addUser(userId: String, data : any) {\n    this._af.database.object(\"/users/\" + userId).set(data);    \n  }\n  \n  getUsers() {\n    return new Promise(resolve => {\n      let result = this._af.database.list('/users');\n      resolve(result);\n    });\n  }\n  \n  getUser(uid: string) {    \n    /*return new Promise(resolve => {\n      let result = this._ref.child('/users/' + uid).on('value', result => {\n        resolve(result.exportVal());        \n      });\n    });  */\n    \n    return this._af.database.object('/users/' + uid);\n  }\n  \n  get loggedInUserId() {\n    return this._ref.getAuth().uid;\n  }\n  \n  get auth() {\n    return this._af.auth;\n  }\n  \n  get ref() {\n    return this._ref;\n    \n  }\n}\n\n"]}